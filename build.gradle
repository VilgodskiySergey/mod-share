plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.vilgodskiy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://nexus.element-soft.com/repository/maven-public/' }
}

dependencies {

    //SPRING
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //DATA BASES
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor ('org.hibernate:hibernate-jpamodelgen:5.4.16.Final')

    //LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //VALIDATOR
    implementation 'com.elementsoft.common:validator:0.3.0-SNAPSHOT'

    //APACHE COMMON
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-collections4:4.4'

    //SWAGGER
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.swagger:swagger-annotations:1.5.24'
    implementation 'io.swagger:swagger-models:1.5.24'

    //JWT AUTH
    implementation 'com.auth0:java-jwt:3.8.1'
    implementation 'com.auth0:auth0-spring-security-api:1.2.3'

    //GOOGLE DRIVE
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'

    //TEST
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

bootRun {
    systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
}

test {
    systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
    systemProperty 'file.encoding', 'UTF8'
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
    useJUnitPlatform()
}
